# Biblioteca

import matplotlib as plt
import matplotlib.pyplot as plt
import numpy as np

# Dados
#Dados Valores expressos em reais - R$
categorias = ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro']
Iluminação_Publica_R = [23.51, 35.26, 35.23, 35.26, 35.26, 40.44, 40.44, 40.44, 40.44, 40.44, 40.44, 40.44]
Energia_R =            [40.97, 55.99, 60.55, 60.77, 55.31, 59.74, 55.60, 66.83, 72.83, 66.05, 71.01, 68.92]
Distribuição_R =       [36.33, 49.67, 53.69, 53.90, 49.06, 53.00, 49.32, 59.27, 64.60, 58.57, 62.97, 61.13]
Tributos_R =           [22.06, 30.14, 48.08, 48.29, 44.98, 48.59, 44.81, 50.56, 57.72, 51.46, 55.39, 53.60]
Encargos_R =           [17.17, 23.47, 32.60, 32.72, 29.78, 32.16, 29.93, 35.98, 39.21, 35.56, 38.23, 37.10]
Perda_R =              [9.76, 13.33, 14.42, 14.47, 13.17, 14.22, 13.24, 15.91, 17.34, 15.73, 16.91, 16.41]
Transmissão_R =        [8.44, 11.53, 12.47, 12.52, 11.39, 12.30, 11.45, 13.76, 15.00, 13.60, 14.62, 14.19]

#Dados Valores expressos em percentual - %
categorias = ['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro']
Iluminação_Pública_P = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Energia_P =            [30.41, 30.41, 27.30, 27.29, 27.15, 27.15, 27.21, 27.58, 27.31, 27.41, 27.40, 27.42]
Distribuição_P =       [26.98, 26.97, 24.20, 24.21, 24.09, 24.09, 24.13, 24.45, 24.23, 24.30, 24.30, 24.32]
Tributos_P =           [16.37, 16.37, 21.68, 21.69, 22.08, 22.09, 21.93, 20.87, 21.64, 21.36, 21.38, 21.32]
Encargos_P =           [12.74, 12.75, 14.70, 14.69, 14.62, 14.62, 14.65, 14.85, 14.70, 14.76, 14.75, 14.76]
Perda_P =              [7.24, 7.24, 6.50, 6.50, 6.47, 6.46, 6.48, 6.57, 6.50, 6.53, 6.53, 6.53]
Transmissão_P =        [6.26, 6.26, 5.62, 5.62, 5.59, 5.59, 5.60, 5.68, 5.62, 5.64, 5.64, 5.65]

# Dados - KWh
categorias = ['01','02','03','04','05','06','07','08','09','10','11','12']
consumo = [180, 246, 266, 267, 243, 244, 213, 256, 279, 253, 272, 264]

# Gráfico 1
# Definir o tamanho do gráfico
plt.figure(figsize=(15, 10))

# Criar um gráfico de barras
plt.bar(categorias, consumo, color='blue')

# Adicionar linhas de grade somente na horizontal
plt.grid(axis='y')

# Adicionar título e rótulos aos eixos
plt.title('Consumo Mensal de KWh')
plt.xlabel('Mês 2023')
plt.ylabel('Consumo (KWh)')

# Adicionar anotações aos pontos (opcional)
for i, valor in enumerate(consumo):
    plt.text(i, valor + 5, str(valor), ha='center', va='bottom')

# Mostrar o gráfico
plt.show()

# Gráfico 2
# Criar um gráfico de barras empilhadas
fig, ax = plt.subplots(figsize=(15, 10))

# Barras para cada categoria
bar_width = 0.8
bar_positions = np.arange(len(categorias))

# Criar barras empilhadas
plt.bar(bar_positions, Iluminação_Publica_R, label='Iluminação Pública', color='red')
plt.bar(bar_positions, Energia_R, bottom=Iluminação_Publica_R, label='Energia', color='orange')
plt.bar(bar_positions, Distribuição_R, bottom=np.array(Iluminação_Publica_R) + np.array(Energia_R), label='Distribuição', color='yellow')
plt.bar(bar_positions, Tributos_R, bottom=np.array(Iluminação_Publica_R) + np.array(Energia_R) + np.array(Distribuição_R), label='Tributos', color='green')
plt.bar(bar_positions, Encargos_R, bottom=np.array(Iluminação_Publica_R) + np.array(Energia_R) + np.array(Distribuição_R) + np.array(Tributos_R), label='Encargos', color='blue')
plt.bar(bar_positions, Perda_R, bottom=np.array(Iluminação_Publica_R) + np.array(Energia_R) + np.array(Distribuição_R) + np.array(Tributos_R) + np.array(Encargos_R), label='Perda', color='purple')
plt.bar(bar_positions, Transmissão_R, bottom=np.array(Iluminação_Publica_R) + np.array(Energia_R) + np.array(Distribuição_R) + np.array(Tributos_R) + np.array(Encargos_R) + np.array(Perda_R), label='Transmissão', color='brown')

# Adicionar título e rótulos aos eixos
plt.title('Distribuição de Custos Mensais 2023 (Valores em R$)')
plt.xlabel('Mês 2023')
plt.ylabel('Valor (R$)')

# Adicionar legenda
plt.legend()

# Definir rótulos do eixo x
plt.xticks(bar_positions, categorias)

# Mostrar o gráfico
plt.show()
